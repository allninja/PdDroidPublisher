buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.0'
    }
}

version = '0.0.1'

allprojects {
	repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
    apply plugin: "eclipse"
}

project(":pd-party") {
	apply plugin: 'android-library'
	apply plugin: "eclipse"

	dependencies {
		compile project(":lib")
	    compile project(":svg-android")
	}

	android {
	    compileSdkVersion 20
	    buildToolsVersion "20"

	    defaultConfig {
	        minSdkVersion 3
	        targetSdkVersion 3
	    }
	    sourceSets {
	        main {
	            manifest.srcFile 'AndroidManifest.xml'
	            resources.srcDirs = ['src']
	            aidl.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['res']
	            assets.srcDirs = ['assets']
	        }
	    }
	     lintOptions {
	          abortOnError false
	        }
	}

	eclipse {

	    // need to specify Java source sets explicitely, SpringSource Gradle Eclipse plugin
	    // ignores any nodes added in classpath.file.withXml
	    sourceSets {
	        main {
	            java.srcDirs "src", 'gen'
	        }
	    }
	    
	    jdt {
	        sourceCompatibility = 1.6
	        targetCompatibility = 1.6
	    }

	    classpath {
	        plusConfigurations += [ project.configurations.compile ]        
	        containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK', 'com.android.ide.eclipse.adt.LIBRARIES'       
	    }

	    project {
	        //name = appName + "-android"
	        natures 'com.android.ide.eclipse.adt.AndroidNature'
	        buildCommands.clear();
	        buildCommand "com.android.ide.eclipse.adt.ResourceManagerBuilder"
	        buildCommand "com.android.ide.eclipse.adt.PreCompilerBuilder"
	        buildCommand "org.eclipse.jdt.core.javabuilder"
	        buildCommand "com.android.ide.eclipse.adt.ApkBuilder"
	    }
	}
}

project(":svg-android") {
	apply plugin: 'android-library'
	apply plugin: "eclipse"

	android {
	    compileSdkVersion 20
	    buildToolsVersion "20"

	    defaultConfig {
	        minSdkVersion 3
	        targetSdkVersion 3
	    }
	    sourceSets {
	        main {
	            manifest.srcFile 'AndroidManifest.xml'
	            resources.srcDirs = ['src']
	            aidl.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['res']
	            assets.srcDirs = ['assets']
	        }
	    }
	     lintOptions {
	          abortOnError false
	        }
	}

	eclipse {

	    // need to specify Java source sets explicitely, SpringSource Gradle Eclipse plugin
	    // ignores any nodes added in classpath.file.withXml
	    sourceSets {
	        main {
	            java.srcDirs "src", 'gen'
	        }
	    }
	    
	    jdt {
	        sourceCompatibility = 1.6
	        targetCompatibility = 1.6
	    }

	    classpath {
	        plusConfigurations += [ project.configurations.compile ]        
	        containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK', 'com.android.ide.eclipse.adt.LIBRARIES'       
	    }

	    project {
	        //name = appName + "-android"
	        natures 'com.android.ide.eclipse.adt.AndroidNature'
	        buildCommands.clear();
	        buildCommand "com.android.ide.eclipse.adt.ResourceManagerBuilder"
	        buildCommand "com.android.ide.eclipse.adt.PreCompilerBuilder"
	        buildCommand "org.eclipse.jdt.core.javabuilder"
	        buildCommand "com.android.ide.eclipse.adt.ApkBuilder"
	    }
	}
}


tasks.eclipse.doLast {
    delete ".project"
}

task buildLibrary(type:Copy) {
 	
 	from ('lib'){
 		into ('pd-party')
 		include 'src/**/*'
 	}
    

	from ('.'){
	    include (
	    	'pd-party/AndroidManifest.xml', 
	    	'pd-party/project.properties', 
	    	'pd-party/src/**/*', 
	    	'pd-party/res/**/*',
	    	
	    	'svg-android/AndroidManifest.xml', 
	    	'svg-android/project.properties', 
	    	'svg-android/src/**/*', 
	    	'svg-android/res/**/*',
	
	    	'pd-for-android/PdCore/AndroidManifest.xml', 
	    	'pd-for-android/PdCore/project.properties', 
	    	'pd-for-android/PdCore/src/**/*', 
	    	'pd-for-android/PdCore/res/**/*',
	    	'pd-for-android/PdCore/libs/**/*'
	    )
 	}
 
 
 	from('pd-for-android/PdCore/jni/libpd/java'){
 		into 'pd-for-android/PdCore/src'
 		include '**/*'
 	}
 	
 	from('samples/example-default'){
 		into 'example'
 		include '**/*'
 	}
 	
 	destinationDir new File(buildDir, 'distrib/eclipse')
}
task cleanLibrary(type: Delete) {

	delete(new File(buildDir, "distrib"))
	delete(new File(buildDir, "PdPartyPublisher-${project.version}.zip"))
}

task buildAbstractions(type:Copy) {
 	from ('pd-party/droidparty-abstractions'){
 		into ('.')
 		include '**/*'
 	}
 	from ('tools/android-screen-ratios'){
		into ('.')
 		include '*.pd' 	
 	}
 	destinationDir new File(buildDir, 'distrib/puredata')
}

task release(type:Zip){
	from(new File(buildDir, 'distrib')){
		include '**/*'
	}
 	archiveName "PdPartyPublisher-${project.version}.zip"
 	destinationDir buildDir
}

release.dependsOn buildLibrary
buildLibrary.dependsOn buildAbstractions
buildAbstractions.dependsOn cleanLibrary